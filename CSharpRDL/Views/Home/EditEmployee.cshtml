@model CSharpRDL.Models.Employee201file
@{
    ViewBag.Title = "EditEmployee";
    Layout = "~/Views/Shared/_DashboardLayoutPage.cshtml";
}

<section class="table-components">
    <div class="container-fluid">
        <!-- ========== title-wrapper start ========== -->
        <div class="title-wrapper pt-30">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <div class="title mb-30">
                        <h2>Edit Employee</h2>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="breadcrumb-wrapper mb-30">
                        <nav aria-label="breadcrumb">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item">
                                    <a href="/Home/Index">Dashboard</a>
                                </li>
                                <li class="breadcrumb-item">
                                    <a href="/Home/Dummy">Dummy</a>
                                </li>
                                <li class="breadcrumb-item active" aria-current="page">
                                    Edit Employee
                                </li>
                            </ol>
                        </nav>
                    </div>
                </div>
            </div>
            <!-- end row -->
        </div>
        @using (Html.BeginForm("EditEmployee", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <hr />

            <div class="row">
                <div class="form-group">
                    <div class="btn btn-primary">
                        <input type="file" id="imageFiles" name="imageFiles" />
                    </div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.EmployeeId, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.EmployeeId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-3">
                    @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-3">
                    @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-3">
                    @Html.LabelFor(model => model.Middlename, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Middlename, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Middlename, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-1">
                    @Html.LabelFor(model => model.Suffix, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Suffix, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Suffix, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.ContactNo, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-3">
                    @Html.LabelFor(model => model.Birthdate, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.TextBoxFor(model => model.Birthdate, new { @type = "date", @id = "dob", @class = "form-control datepicker" })
                    @*@Html.EditorFor(model => model.Birthdate, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.Birthdate, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-3">
                    @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control", @id = "Age", @onmousemove = "computeAge()" } })
                    @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-3">
                    @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control", @id = "Age", @onmousemove = "computeAge()" } })
                    @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @id = "Age", @onmousemove = "computeAge()" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>

                <div>
                    <input type="submit" value="Update" class="btn btn-outline-danger" />
                </div>
            </div>
        }
    </div>
</section>
<script>
    function computeAge() {
        var day = document.getElementById("dob").value;
        var DOB = new Date(day);
        var today = new Date();
        var Age = today.getTime() - DOB.getTime();
        Age = Math.floor(Age / (1000 * 60 * 60 * 24 * 365.25));
/*        document.getElementById("Age").disabled = true;*/
        document.getElementById("Age").value = Age
    }
</script>

       

